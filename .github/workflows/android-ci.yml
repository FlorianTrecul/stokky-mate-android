name: Android CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  code-analysis:
    name: Code Analysis
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the project code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: >
            ${{ runner.os }}-gradle-
            ${{ hashFiles('**/*.gradle', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # 3. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      # 4. Run Detekt Analysis
      - name: Run Detekt
        run: ./gradlew detektAllModules

      # 5. Run KtLint
      - name: Run KtLint
        run: ./gradlew ktlintCheck

      # 6. Run Compose Lint Checks
      - name: Run Compose Lint Checks
        run: ./gradlew lint

      # 7. Upload Detekt Reports
      - name: Upload Detekt Reports
        uses: actions/upload-artifact@v3
        with:
          name: Detekt Reports
          path: build/reports/detekt/detekt.html

      # 8. Upload KtLint Reports
      - name: Upload KtLint Reports
        uses: actions/upload-artifact@v3
        with:
          name: KtLint Reports
          path: build/reports/ktlint/ktlint.html

      # 9. Upload Compose Lint Reports
      - name: Upload Compose Lint Reports
        uses: actions/upload-artifact@v3
        with:
          name: Lint Reports
          path: app/build/reports/lint-results.html

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: code-analysis # DÃ©pend du job "code-analysis"

    steps:
      # 1. Checkout the project code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: >
            ${{ runner.os }}-gradle-
            ${{ hashFiles('**/*.gradle', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      # 3. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      # 4. Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 5. Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 6. Build the project
      - name: Build the Project
        run: ./gradlew assembleDebug

      # 7. Run Unit Tests
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      # 8. Upload Unit Test Reports
      - name: Upload Unit Test Reports
        uses: actions/upload-artifact@v3
        with:
          name: Unit Test Reports
          path: app/build/reports/tests/testDebugUnitTest/